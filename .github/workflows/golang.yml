name: CI

on:
  workflow_call:
    inputs:
      runs-on:
        type: "string"
        required: false
        default: "['ubuntu-latest']"
        description: "The runner to use for the job"
      go-version:
        type: "string"
        required: false
        default: "1.22"
        description: "The Go version to use for the job"

jobs:
  build:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "${{ inputs.go-version }}"
      - name: Install dependencies
        run: go mod tidy
      - name: Check formatting
        run: gofmt -l -w .
      - name: Lint code
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...
      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest
      - name: Run tests
        run: go test -v ./... | go-junit-report > report.xml
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: report.xml
      - name: Annotate test results
        uses: dorny/test-reporter@v1
        with:
          name: Go Tests
          path: report.xml
          reporter: java-junit
      - name: Collect code coverage
        run: go test -coverprofile=coverage.out ./...
      - name: Convert coverage to lcov format
        run: go tool cover -func=coverage.out -o coverage.lcov
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-lcov
          path: coverage.lcov
      - name: Check for vulnerabilities
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
