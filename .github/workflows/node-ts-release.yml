name: NPM Publish
on: 
  workflow_call:
    inputs:
      node_version:
        default: '20.x'
        type: string
        required: false
      continue-on-prod-vulns:
        default: false
        type: boolean
        description: 'Whether to fail the job or continue when vulnerabilities are found in production dependencies'
      publish-docs:
        type: boolean
        default: true
        description: 'Whether to publish docs to github page'
        required: false
      docs-path:
        type: string
        default: documentation
        required: false
      working-dir:
        default: '.'
        type: string
        required: false
      tag:
        type: string
        required: false
        description: 'Tag to use when create-release is true'
      create-release:
        type: boolean
        required: false
        default: false
      runs-on:
        type: 'string'
        required: false
        default: '["ubuntu-latest"]'
        description: string of a JSON array describing the run target.
    secrets:
      NPM_TOKEN:
        description: 'A token with push permission to npm'
        required: true
jobs:
  publish:
    name: Publish Release
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.working-dir }}/package-lock.json
      - shell: bash
        working-directory: ${{ inputs.working-dir }}
        run: npm ci
      - shell: bash
        run: npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN}}
        working-directory: ${{ inputs.working-dir }}
        env:
          NODE_ACCESS_TOKEN: ${{ secrets.NPM_TOKEN }}
      - shell: bash
        run: npm publish --access public
        working-directory: ${{ inputs.working-dir }}
      - if: ${{ inputs.publish-docs }}
        shell: bash
        run: npm run build:docs
        working-directory: ${{ inputs.working-dir }}
      - if: ${{ inputs.publish-docs }}
        name: Setup Pages
        uses: actions/configure-pages@v5
      - if: ${{ inputs.publish-docs }}
        name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: '${{ inputs.docs-path }}'
      - if: ${{ inputs.publish-docs == 'true' }}
        name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Create Release
        if: ${{ inputs.create-release }}
        run: |
          gh release create ${{ inputs.tag }} --generate-notes
